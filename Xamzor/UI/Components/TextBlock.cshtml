@inherits UIElement

<div id="@Id" class="@CssClass" style="@LayoutCss">@if (Text != null)
    {
        @Text
    }
    else
    {
        @ChildContent
    }
</div>

@functions{

    public string Foreground { get; set; } = "black";

    public string FontFamily { get; set; } = "Segoe UI";

    public double FontSize { get; set; } = 16;

    public FontWeight FontWeight { get; set; } = FontWeight.Normal;

    public FontStyle FontStyle { get; set; } = FontStyle.Normal;

    public TextWrapping TextWrapping { get; set; } = TextWrapping.WrapWholeWords;

    public TextTrimming TextTrimming { get; set; } = TextTrimming.None;

    public bool IsTextSelectionEnabled { get; set; } = false;

    public string Text { get; set; }

    protected override void ComputeOwnLayoutCss(System.Text.StringBuilder sb)
    {
        base.ComputeOwnLayoutCss(sb);

        if (FontFamily != null)
            sb.Append($"font-family: {FontFamily}; ");

        sb.Append($"font-size: {FontSize}px; ");

        if (Foreground != null)
            sb.Append($"color: {Foreground}; ");

        if (FontWeight != FontWeight.Normal)
            sb.Append($"font-weight: {(int)FontWeight}; ");

        if (FontStyle != FontStyle.Normal)
            sb.Append($"font-style: {FontStyle.ToString().ToLower()}; ");

        sb.Append($"white-space: {(TextWrapping == TextWrapping.NoWrap ? "nowrap" : "pre-line")}; ");

        if (TextWrapping == TextWrapping.Wrap)
            sb.Append($"overflow-wrap: break-word; ");

        if (TextTrimming != TextTrimming.None)
            sb.Append($"text-overflow: ellipsis; ");

        if (!IsTextSelectionEnabled)
            sb.Append("user-select: none; -ms-user-select: none; cursor: default; ");
    }
}