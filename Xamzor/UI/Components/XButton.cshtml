@inherits ContentControl

<button id="@Id" class="@CssClass" style="@CssStyle" role="button" tabindex="0" ref="LayoutRoot"
        onclick="@((Action<UIMouseEventArgs>)OnClicked)">

    <!-- For now, styling of this Border for different button states is done in CSS -->
    <Border Parent="this" Padding="T(12, 8)">
        @ActualContent
    </Border>
</button>

@functions{

    public static readonly PropertyKey ClickedProperty = PropertyKey.Create<EventHandler<UIMouseEventArgs>, XButton>(nameof(Clicked));

    // This is a property because adding handlers to events via tag helpers doesn't seem to be supported yet
    [Parameter] protected EventHandler<UIMouseEventArgs> Clicked { get; set; }

    private void OnClicked(UIMouseEventArgs e) => Clicked?.Invoke(this, e);

    protected override bool OverridesContainer => true;

    protected override void ComputeCss(System.Text.StringBuilder sb)
    {
        base.ComputeCss(sb);
        sb.Append("text-align: left; ");
    }
}